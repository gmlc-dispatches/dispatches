# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Checks

on:
  push:
    branches:
      - main
      - '*_rel'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    # important to make sure that all commands on Windows are run using Bash
    # -l: login shell, needed when using Conda
    shell: bash -l {0}

env:
  PYTEST_ADDOPTS: --color=yes -k "_charge_usc_powerplant and main_function"

jobs:
  requirements-sweep:
    if: "false"
    name: Test idaes-pse @ ${{ matrix.ref }}
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
        os-version:
          - ubuntu-20.04
        ref:
          # generated with git log --pretty=format:"          - %h  # %cs %s" -n 15
          - 69972afb2  # 2022-08-19 Bump bin version to 3.0.0 (#936)
          - 974bf7e63  # 2022-08-19 Add additional methods to `MultiPeriodModel` class (#908)
          - 087ec961e  # 2022-08-19 Export as PNG & jpeg (#901)
          - a82afa170  # 2022-08-18 Remove JS files from docs/static dir (#932)
          - 66935c80a  # 2022-08-18 Updating the Pyomo tag to the 6.4.2 release (#935)
          - 518cf5c74  # 2022-08-16 Docs Getting Started Reorg (#885)
          - 0648c48f1  # 2022-08-15 Fix multistage turbine test (#933)
          - f0e136f61  # 2022-08-09 Switch ProcessBlock 'default' argument to just use keyword arguments (#922)
          - 1e20641f9  # 2022-08-08 Create work term for Pressure Changer with EnergyBalanceType.none (#925)
          - 5657571fd  # 2022-07-28 Bumping the IDAES fork of Pyomo (#923)
          - a941c4c41  # 2022-07-20 SSLW Compressor Exceptions (#905)
          # - fd19b8fbf  # 2022-07-19 Fixing bug in Separator report method (#916)
          # - 7a1e63df0  # 2022-07-19 NGFC Flowsheet Improvements (#836)
          # - 503f4551a  # 2022-07-15 Adding build_port method to StateBlocks (#876)
          # - bb31aaf9e  # 2022-07-14 Add configuration and requirement for pre-commit framework for Git hooks (#911)
        include:
          - ref: a941c4c41  # 2022-07-20 SSLW Compressor Exceptions (#905)
            pyomo-req: ', "pyomo<6.4.2"'
          - ref: 5657571fd  # 2022-07-28 Bumping the IDAES fork of Pyomo (#923)
            pyomo-req: ', "pyomo<6.4.2"'
          - ref: 1e20641f9  # 2022-08-08 Create work term for Pressure Changer with EnergyBalanceType.none (#925)
            pyomo-req: ', "pyomo<6.4.2"'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Override requirements in setup.py
      run: |
        # there are most likely better ways of doing this, but this'll have to do
        # /setup(/i means "insert what follows in the line preceding the matching line"
        # the matching line should be the one containing the call to setup()
        sed -i '/setup(/i SPECIAL_DEPENDENCIES = ["idaes-pse @ https://github.com/IDAES/idaes-pse/archive/${{ matrix.ref }}.zip"${{ matrix.pyomo-req }}]' setup.py
        echo '::group::Contents of setup.py'
        cat setup.py
        echo '::endgroup::'
    - name: Install Python package and dependencies
      run: |
        _pip_install="pip install --progress-bar off"
        echo '::group::Output of "pip install" commands'
        $_pip_install --upgrade pip wheel setuptools
        $_pip_install -r requirements-dev.txt
        echo '::endgroup::'
        echo '::group::Display installed packages'
        conda list
        pip list
        pip show idaes-pse
        echo '::endgroup::'
        echo '::group::Output of "idaes get-extensions" command'
        idaes get-extensions --verbose
        echo '::endgroup::'
    - name: Collect environment information
      run: |
        mkdir -p env-info
        idaes environment-info > env-info/idaes.txt
        pip freeze > env-info/pip-freeze.txt
        echo '::group::Contents of env-info dir'
        cat env-info/*
        echo '::endgroup::'
    - uses: actions/upload-artifact@v3
      with:
        name: env-info-${{ matrix.ref }}
        path: env-info/
    - name: Test with pytest
      run: |
        pytest

  tests:
    name: Tests (py${{ matrix.python-version }}/${{ matrix.os }})
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
        os:
          - linux
          - win64
        include:
          - os: linux
            os-version: ubuntu-20.04
          - os: win64
            os-version: windows-2019
          - python-version: '3.8'
            cov-report: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python package and dependencies
      run: |
        _pip_install="pip install --progress-bar off"
        echo '::group::Output of "pip install" commands'
        $_pip_install --upgrade pip wheel setuptools
        $_pip_install -r requirements-dev.txt
        echo '::endgroup::'
        echo '::group::Display installed packages'
        conda list
        pip list
        pip show idaes-pse
        echo '::endgroup::'
        echo '::group::Output of "idaes get-extensions" command'
        idaes get-extensions --verbose
        echo '::endgroup::'
    - name: Lint with flake8
      if: "false"
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Add pytest CLI options for coverage
      if: matrix.cov-report
      run: |
        echo PYTEST_ADDOPTS="$PYTEST_ADDOPTS --cov --cov-report=xml" >> "$GITHUB_ENV"
    - name: Test with pytest
      run: |
        pytest
    - name: Upload coverage report to Codecov
      if: matrix.cov-report
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true

  tests-noneditable-install:
    if: "false"
    name: Tests (non-editable install) (py${{ matrix.python-version }}/${{ matrix.os }})
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.9'
        os:
          - linux
          - win64
        include:
          - os: linux
            os-version: ubuntu-20.04
          - os: win64
            os-version: windows-2019
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: dispatches-env
        python-version: ${{ matrix.python-version }}
    - name: Define install URL (default)
      env:
        _repo_full_name: gmlc-dispatches/dispatches
        _ref_to_install: main
      run: |
        echo "_install_url=https://github.com/${_repo_full_name}/archive/${_ref_to_install}.zip" >> $GITHUB_ENV
    - name: Define install URL (for PRs)
      if: github.event.pull_request
      env:
        _repo_full_name: ${{ github.event.pull_request.head.repo.full_name }}
        _ref_to_install: ${{ github.event.pull_request.head.sha }}
      run:
        echo "_install_url=https://github.com/${_repo_full_name}/archive/${_ref_to_install}.zip" >> $GITHUB_ENV
    - name: Install dispatches and testing dependencies
      run: |
        echo '::group::Output of "pip install" commands'
        pip install --progress-bar off "dispatches @ ${_install_url}"
        echo '::endgroup::'
        echo '::group::Display installed packages'
        pip list
        echo '::endgroup::'
    - name: Install IDAES extensions
      run: |
        echo '::group::Output of "idaes get-extensions" command'
        idaes get-extensions --verbose
        echo '::endgroup::'
    - name: Run pytest
      run: |
        pytest --pyargs dispatches
